#!/usr/bin/env bash

#2023-04-06 This script generates a Fortran module file with the fpm release information, 
#hardcoded as Fortran PARAMETERs. Other options using external/include files do not work
#because fpm also needs to be built as a single-source-file package.

set -ex

# Helper function that wraps a string into a fortran character(*), parameter definition
fortran_character_parameter()
{
    line="character(len=*), parameter :: $1 = \"$2\""
    echo $line    
}

# define include file for version caching
INCLUDE_FILE="$(dirname $0)/../src/fpm/fpm_release_parameters.f90"

# Get latest release version. Exclude trunk, which is named `current` on the fpm repo
latest_release=$(git describe --tags --exclude current)
if [ $? -ne 0 ]; then
  echo "Could not query the current release from git. Check that git is installed on this system."
  exit 1
fi

# Extract numbered version 
no_v=${latest_release#*v}    # Remove heading v
no_commit=${no_v%-*}         # Remove commit #
version=${no_commit%-*}      # Remove increment

echo "Deploying fpm version $version information to $INCLUDE_FILE ...

# Write to a fortran include file
MODULE_NAME=fpm_release_parameters
echo "!># $MODULE_NAME: This module was automatically generated by the fpm CI " > $INCLUDE_FILE
echo "module $MODULE_NAME" >> $INCLUDE_FILE
echo "    implicit none " >> $INCLUDE_FILE
echo "    public " >> $INCLUDE_FILE
echo $(fortran_character_parameter fpm_version_ID $version ) >> $INCLUDE_FILE
echo $(fortran_character_parameter fpm_version_long $latest_release ) >> $INCLUDE_FILE
echo "end module $MODULE_NAME" >> $INCLUDE_FILE 
